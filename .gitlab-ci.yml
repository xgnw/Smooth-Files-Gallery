stages:
  - build
  - publish

build-stable:
  stage: build
  tags:
    - linux
    - docker
    - amd64
    - mpc
  image: docker.io/library/docker:cli
  services:
    - name: docker.io/library/docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    CONTAINER_IMAGE_NAME: smooth-files-gallery
  rules:
  - if: $CI_COMMIT_TAG
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin docker.io
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    # 构建
    - docker build --pull -t "$CONTAINER_IMAGE_NAME:$CI_COMMIT_TAG" .
    - docker tag $CONTAINER_IMAGE_NAME:$CI_COMMIT_TAG $CONTAINER_IMAGE_NAME:latest
    # 为 Docker Hub 打远程仓库标签
    - docker tag $CONTAINER_IMAGE_NAME:$CI_COMMIT_TAG docker.io/$DOCKERHUB_USER/$CONTAINER_IMAGE_NAME:$CI_COMMIT_TAG
    - docker tag $CONTAINER_IMAGE_NAME:latest docker.io/$DOCKERHUB_USER/$CONTAINER_IMAGE_NAME:latest
    # 为私有仓库打远程仓库标签
    - docker tag $CONTAINER_IMAGE_NAME:$CI_COMMIT_TAG $CI_REGISTRY/xiaoxi/$CONTAINER_IMAGE_NAME:$CI_COMMIT_TAG
    - docker tag $CONTAINER_IMAGE_NAME:latest $CI_REGISTRY/xiaoxi/$CONTAINER_IMAGE_NAME:latest
    # 推送 Docker Hub
    - docker push docker.io/$DOCKERHUB_USER/$CONTAINER_IMAGE_NAME:$CI_COMMIT_TAG
    - docker push docker.io/$DOCKERHUB_USER/$CONTAINER_IMAGE_NAME:latest
    # 推送私有仓库
    - docker push $CI_REGISTRY/xiaoxi/$CONTAINER_IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY/xiaoxi/$CONTAINER_IMAGE_NAME:latest

build-test:
  stage: build
  tags:
    - linux
    - docker
    - amd64
    - mpc
  image: docker.io/library/docker:cli
  services:
    - name: docker.io/library/docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    CONTAINER_IMAGE_NAME: smooth-files-gallery
  rules:
  - when: manual
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    # 构建
    - docker build --pull -t "$CONTAINER_IMAGE_NAME:test-$CI_COMMIT_SHORT_SHA" .
    # 为私有仓库打远程仓库标签
    - docker tag $CONTAINER_IMAGE_NAME:test-$CI_COMMIT_SHORT_SHA $CI_REGISTRY/xiaoxi/$CONTAINER_IMAGE_NAME:test-$CI_COMMIT_SHORT_SHA
    # 推送私有仓库
    - docker push $CI_REGISTRY/xiaoxi/$CONTAINER_IMAGE_NAME:test-$CI_COMMIT_SHORT_SHA

publish-npm:
  stage: publish
  tags:
    - linux
    - docker
  image: docker.io/library/node:22
  rules:
  - if: $CI_COMMIT_TAG
  before_script:
    - apt-get install -y zip
    - npm config set '//registry.npmjs.org/:_authToken' "$NPM_TOKEN"
  script:
    # 压缩资源文件
    - npm run assets:zip
    # 发布到 NPM
    - npm publish --access public
